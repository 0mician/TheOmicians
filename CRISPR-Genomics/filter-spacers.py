# Last modified: 28 May 2015
# Ming

import re
import os
import copy

########## Files/Directories ##########

# variables to fill in
# pilerReportPath = directory of reports generated by pilercr
# spacerCountPath = directory of reports generated by count-spacers-occurrences-in-genomes.py

pilerReportPath = "crispr/NC_000961.txt"
spacerCountPath = "spacer_count.txt"
genomePath = "NC000961-string.txt"

########## Region of multiple occurrence spacers ##########

spacersCount = open(spacerCountPath, "r")
genome = open(genomePath,"r")

spacers = spacersCount.read()
genome = genome.read()

# regex return words with repeats of any of ATCG for at least 10 times
# regex assume length of spacers at least 10 nucleotides long
spacers = re.findall("[ATCG]{10,}", spacers)

# spacerPos = dictionary with:
# key = spacer sequence; value = start positions of each spacer in genome
spacerPos = {}
for spacer in spacers:
	spacerPos[spacer] = [nucleotide.start()+1 for nucleotide in re.finditer(spacer, genome)]

spacersCount.close()


########## CRISPR region ##########

report = open(pilerReportPath, "r")
lst = report.read()

# if report does not contain CRISPR array, "SUMMARY BY POSITION" will not exists,
# return file name: No CRISPR array found
if bool(re.search("SUMMARY BY POSITION", lst)) == False:
	print os.path.basename(pilerReportPath) + ": No CRISPR array found"

else:
	lst = lst.split('SUMMARY BY POSITION')[1]
	lst = lst.split('\n')
	CRISPRregion = {}
	i = 1

	print "File: " + os.path.basename(pilerReportPath) + '\n'

	for line in lst:
		# pos = lines with [numbers][>= 1 space][numbers]
		pos = re.findall('[0-9]+(?:\s+|$)[0-9]+', line)
		if pos != []:
				a = re.split(" +",pos[0])
				CRISPRregion[i] = [int(a[0]), int(a[0]) + int(a[1])]
				i = i + 1

report.close()

########## Filter for spacers which is out of CRISPR region ##########

def isInCrisprArray (pos, region):
	for array in region:
		if region[array][0] <= pos <= region[array][1]:
			return True
	return False

temp = copy.deepcopy(spacerPos)
for spacer in spacerPos:
	for position in spacerPos[spacer]:
		if(isInCrisprArray(position, CRISPRregion)):
			temp[spacer].remove(position)
	if temp[spacer] == []:
		del temp[spacer]

print temp


		
# print spacerPos['AGGCAGATCTGAGGATCATTGCAGAGCGAGGAAACA'][0]

